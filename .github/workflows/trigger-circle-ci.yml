name: Build On Demand
on:
  issue_comment:
    types: [created, edited]
jobs:
  debug:
    name: Debug
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "All event information:"
          cat << 'EOF'
          ${{ toJSON(github.event) }}
          EOF
      - run: |
          echo "Body of the comment:"
          cat << 'EOF'
          ${{ toJSON(github.event.issue.comment.body) }}
          EOF
  trigger-circleci:
      name: Trigger end to end build
      # Only run if the comment was made on a PR and it contains the magic string
      if: github.event.issue.pull_request && contains(github.event.comment.body, '/regression-test')
      runs-on: ubuntu-latest
      steps:
        - name: Get PR Target
          id: get_pr_info
          uses: actions/github-script@v3
          with:
            script: |
              if (context.issue.number == null) {
              core.info(`NO PR found.`)
              return ""
              }
              const request = {
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number
              }
              core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
              try {
                const result = await github.pulls.get(request)
                core.info(`PR Target ${result.data.base.ref}`)
                core.info(`PR Source ${result.data.head.ref}`)
                return result.data
              } catch (err) {
                core.info(`Request failed with error ${err}. Setting PR target to null`)
                return ""
              }
        - name: Trigger End-To-End Build
          run: |
            echo curl -u ${CCI_TOKEN}: -X POST --header "Content-Type: application/json" -d '{
            "branch": "'"${GHA_SOURCE_BRANCH}"'",
            "parameters": {
              "e2e-test":"e2e_test",
            }}' ${CIRCLE_PIPELINE_URL}
          env:
            CCI_TOKEN: ${{ secrets.CCI_TOKEN }}
            CIRCLE_PIPELINE_URL: https://circleci.com/api/v2/project/gh/deliveroo/ad-platform-algos-dbt/pipeline
            GHA_SOURCE_BRANCH: ${{ fromJSON(steps.get_pr_info.outputs.result).head.ref }}
            GHA_TARGET_BRANCH: ${{ fromJSON(steps.get_pr_info.outputs.result).base.ref }}
            GHA_REF: refs/pull/${{fromJSON(steps.get_pr_info.outputs.result).number}}/merge
